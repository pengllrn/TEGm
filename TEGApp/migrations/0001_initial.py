# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2017-10-08 01:57
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DeviceUseRate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deviceid', models.IntegerField(blank=True, db_column='DeviceId', null=True)),
                ('date', models.DateField(blank=True, db_column='date', null=True)),
                ('rate', models.FloatField(blank=True, db_column='rate', null=True)),
            ],
            options={
                'db_table': 'DeviceUseRate',
            },
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(blank=True, db_column='Number', max_length=20, null=True)),
                ('typeid', models.IntegerField(blank=True, db_column='TypeId', null=True)),
                ('univalence', models.FloatField(blank=True, db_column='Univalence', null=True)),
                ('sensorid', models.IntegerField(blank=True, db_column='SensorId', null=True)),
                ('schoolid', models.IntegerField(blank=True, db_column='SchoolId', null=True)),
                ('checkerid', models.IntegerField(blank=True, db_column='CheckerId', null=True)),
                ('checkername', models.CharField(blank=True, db_column='CheckerName', max_length=20, null=True)),
                ('status', models.IntegerField(blank=True, db_column='Status', null=True)),
                ('regist_first', models.DateField(blank=True, db_column='regist_first', null=True)),
                ('use_depart', models.CharField(blank=True, db_column='use_depart', max_length=20, null=True)),
            ],
            options={
                'db_table': 'Device',
            },
        ),
        migrations.CreateModel(
            name='DeviceAlarm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deviceid', models.IntegerField(blank=True, db_column='DeviceId', null=True)),
                ('devicenum', models.CharField(blank=True, db_column='DeviceNum', max_length=20, null=True)),
                ('schoolid', models.IntegerField(blank=True, db_column='SchoolId', null=True)),
                ('roomid', models.IntegerField(blank=True, db_column='RoomId', null=True)),
                ('ordernum', models.IntegerField(blank=True, db_column='OrderNum', null=True)),
                ('alarmstart', models.BooleanField(db_column='AlarmStart')),
            ],
            options={
                'db_table': 'DeviceAlarm',
            },
        ),
        migrations.CreateModel(
            name='DeviceGis',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('longitude', models.FloatField(blank=True, db_column='Longitude', null=True)),
                ('latitude', models.FloatField(blank=True, db_column='Latitude', null=True)),
                ('deviceid', models.IntegerField(blank=True, db_column='DeviceId', null=True)),
                ('devicenum', models.CharField(blank=True, db_column='DeviceNum', max_length=20, null=True)),
                ('schoolid', models.IntegerField(blank=True, db_column='SchoolId', null=True)),
            ],
            options={
                'db_table': 'DeviceGis',
            },
        ),
        migrations.CreateModel(
            name='DeviceInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deviceid', models.IntegerField(blank=True, db_column='DeviceId', null=True)),
                ('devicenum', models.CharField(blank=True, db_column='DeviceNum', max_length=20, null=True)),
                ('schoolid', models.IntegerField(blank=True, db_column='SchoolId', null=True)),
                ('typeid', models.IntegerField(blank=True, db_column='TypeId', null=True)),
                ('roomid', models.CharField(blank=True, db_column='RoomId', max_length=20, null=True)),
                ('ordernum', models.IntegerField(blank=True, db_column='OrderNum', null=True)),
                ('devicekind', models.CharField(blank=True, db_column='DeviceKind', max_length=50, null=True)),
                ('description', models.TextField(blank=True, db_column='Description', null=True)),
                ('configureinfo', models.CharField(blank=True, db_column='ConfigureInfo', max_length=30, null=True)),
                ('useflag', models.BooleanField(db_column='UseFlag')),
                ('max_use_time', models.IntegerField(blank=True, db_column='max_use_time', null=True)),
            ],
            options={
                'db_table': 'DeviceInfo',
            },
        ),
        migrations.CreateModel(
            name='DeviceToSensor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sensornum', models.CharField(blank=True, db_column='SensorNum', max_length=50, null=True)),
            ],
            options={
                'db_table': 'DeviceToSensor',
            },
        ),
        migrations.CreateModel(
            name='DeviceType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('typename', models.CharField(blank=True, db_column='TypeName', max_length=30, null=True)),
            ],
            options={
                'db_table': 'DeviceType',
            },
        ),

        migrations.CreateModel(
            name='DeviceUseRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deviceid', models.IntegerField(blank=True, db_column='DeviceId', null=True)),
                ('schoolid', models.IntegerField(blank=True, db_column='SchoolId', null=True)),
                ('existimage', models.BooleanField(db_column='ExistImage')),
                ('imageaddress', models.CharField(blank=True, db_column='ImageAddress', max_length=40, null=True)),
                ('date', models.DateField(blank=True, db_column='date', null=True)),
                ('begintime', models.DateField(blank=True, db_column='BeginTime', null=True)),
                ('endtime', models.DateField(blank=True, db_column='EndTime', null=True)),
            ],
            options={
                'db_table': 'DeviceUseRecord',
            },
        ),
        migrations.CreateModel(
            name='Fruits',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fruitname', models.CharField(max_length=40)),
            ],
            options={
                'db_table': 'Fruits',
            },
        ),
        migrations.CreateModel(
            name='Login',
            fields=[
                ('user_id', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('user_pwd', models.CharField(max_length=40)),
            ],
            options={
                'db_table': 'Login',
            },
        ),
        migrations.CreateModel(
            name='PropertyCheck',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deviceid', models.IntegerField(blank=True, db_column='DeviceId', null=True)),
                ('checkerid', models.CharField(blank=True, db_column='CheckerId', max_length=40, null=True)),
                ('checkername', models.CharField(blank=True, db_column='CheckerName', max_length=40, null=True)),
                ('checketime', models.DateField(blank=True, db_column='CheckeTime', null=True)),
                ('checkerflag', models.BooleanField(db_column='CheckFlag')),
            ],
            options={
                'db_table': 'PropertyCheck',
            },
        ),
        migrations.CreateModel(
            name='PropertyDamage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deviceid', models.IntegerField(blank=True, db_column='DeviceId', null=True)),
                ('applier', models.CharField(blank=True, db_column='Applier', max_length=40, null=True)),
                ('applierid', models.IntegerField(blank=True, db_column='ApplierId', null=True)),
                ('appliertel', models.TextField(blank=True, db_column='ApplierTel', null=True)),
                ('datetime', models.DateField(blank=True, db_column='DateTime', null=True)),
            ],
            options={
                'db_table': 'PropertyDamage',
            },
        ),
        migrations.CreateModel(
            name='RoomInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('schoolid', models.IntegerField(blank=True, db_column='SchoolId', null=True)),
                ('building', models.CharField(blank=True, db_column='Building', max_length=50, null=True)),
                ('roomname', models.CharField(blank=True, db_column='RoomName', max_length=50, null=True)),
            ],
            options={
                'db_table': 'RoomInfo',
            },
        ),
        migrations.CreateModel(
            name='SchoolInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('schoolname', models.CharField(blank=True, db_column='SchoolName', max_length=40, null=True)),
                ('schoolregister', models.CharField(blank=True, db_column='SchoolRegister', max_length=50, null=True)),
                ('schoolstatus', models.IntegerField(blank=True, db_column='SchoolStatus', null=True)),
                ('schoolresper', models.IntegerField(blank=True, db_column='SchoolResper', null=True)),
                ('schooltel', models.CharField(blank=True, db_column='SchoolTel', max_length=20, null=True)),
            ],
            options={
                'db_table': 'SchoolInfo',
            },
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nametest', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'db_table': 'test',
            },
        ),
        migrations.CreateModel(
            name='UserAuthority',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.CharField(blank=True, db_column='UserId', max_length=40, null=True)),
                ('schoolid', models.IntegerField(blank=True, db_column='SchoolId', null=True)),
            ],
            options={
                'db_table': 'UserAuthority',
            },
        ),
        migrations.CreateModel(
            name='UserModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.CharField(blank=True, db_column='UserId', max_length=40, null=True)),
                ('userpassword', models.CharField(blank=True, db_column='UserPassword', max_length=40, null=True)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=20, null=True)),
                ('authority', models.BooleanField(db_column='Authority')),
                ('systemcontrol', models.BooleanField(db_column='SystemControl')),
                ('level', models.IntegerField(blank=True, db_column='Level', null=True)),
                ('email', models.EmailField(blank=True, db_column='Email', max_length=254, null=True)),
                ('telephonenum', models.TextField(blank=True, db_column='TelephoneNum', null=True)),
                ('weixin', models.TextField(blank=True, db_column='Weixin', null=True)),
            ],
            options={
                'db_table': 'UserModel',
            },
        ),
    ]
